"""
3. Массив размером 2m + 1, где m – натуральное число, заполнен случайным образом.
Найдите в массиве медиану. Медианой называется элемент ряда, делящий его на
две равные по длине части: в одной находятся элементы, которые не меньше медианы,
в другой – не больше медианы.

Задачу можно решить без сортировки исходного
массива.

Но если это слишком сложно, то используйте метод сортировки,
который не рассматривался на уроках: Шелла, Гномья, Кучей...

[5, 3, 4, 3, 3, 3, 3]

[3, 3, 3, 3, 3, 4, 5]

my_lst
new_lts

arr[m]


from statistics import median

[3, 4, 3, 3, 5, 3, 3]


left.clear()
right.clear()


m = 3
len = 7
i
left = []
right = []

left == right and

for i in
    for
    left == right
    left.clear()
    right.clear()


"""

from random import randint
from statistics import median

def heapify(arr, n, i):
    largest = i
    k = 2 * i + 1
    r = 2 * i + 2
    if k < n and arr[largest] < arr[k]:
        largest = k
    if r < n and arr[largest] < arr[r]:
        largest = r
    if largest != i:
        arr[i], arr[largest] = arr[largest], arr[i]

        heapify(arr, n, largest)

def heap_sort(arr):
    n = len(arr)
    for i in range(n // 2 - 1, -1, -1):
        heapify(arr, n, i)
    for i in range(n - 1, 0, -1):
        arr[i], arr[0] = arr[0], arr[i]
        heapify(arr, i, 0)
    return arr

m = 10
list_obj = [randint(0, 999) for _ in range(2 * m + 1)]
print(f'Исходный массив: {list_obj}')

sorted_list = heap_sort(list_obj[:])
print(f'Отсортированный массив: {sorted_list}')
print(f'Медиана найденная с помощью метода сортировки куча: {sorted_list[m]}')
print(f'Медиана найденная с помощью встроенной функции: {median(list_obj)}')

# Исходный массив: [827, 635, 90, 260, 685, 837, 644, 66, 385, 530, 702, 585, 888, 626, 311, 51, 794, 71, 976, 483, 734]
# Отсортированный массив: [51, 66, 71, 90, 260, 311, 385, 483, 530, 585, 626, 635, 644, 685, 702, 734, 794, 827, 837, 888, 976]
# Медиана найденная с помощью метода сортировки "куча": 626
# Медиана найденная с помощью встроенной функции: 626
#
# Сортировка выполнена с помощью найденного метода "куча".
# Медиана найденная с помощью метода сортировки куча и медиана найденная с помощью встроенной функции совпадают, значит метод сортировки "куча" работате верно.